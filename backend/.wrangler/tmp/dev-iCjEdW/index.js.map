{
  "version": 3,
  "sources": ["../../../node_modules/unenv/dist/runtime/_internal/utils.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/perf_hooks/performance.mjs", "../../../node_modules/unenv/dist/runtime/node/perf_hooks.mjs", "../../../node_modules/@cloudflare/unenv-preset/dist/runtime/polyfill/performance.mjs", "../../../node_modules/unenv/dist/runtime/mock/noop.mjs", "../../../node_modules/unenv/dist/runtime/node/console.mjs", "../../../node_modules/@cloudflare/unenv-preset/dist/runtime/node/console.mjs", "../../../node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-console", "../../../node_modules/unenv/dist/runtime/node/internal/process/hrtime.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/tty/write-stream.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/tty/read-stream.mjs", "../../../node_modules/unenv/dist/runtime/node/tty.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/process/node-version.mjs", "../../../node_modules/unenv/dist/runtime/node/internal/process/process.mjs", "../../../node_modules/@cloudflare/unenv-preset/dist/runtime/node/process.mjs", "../../../node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-process", "wrangler-modules-watch:wrangler:modules-watch", "../../../node_modules/wrangler/templates/modules-watch-stub.js", "../../../src/lib/db.ts", "../../../src/lib/etag.ts", "../../../src/lib/openai.ts", "../../../src/lib/aiAnalysis.ts", "../../../src/jobs/analysisWorker.ts", "../bundle-NJQ9e5/middleware-loader.entry.ts", "../bundle-NJQ9e5/middleware-insertion-facade.js", "../../../src/index.ts", "../../../src/handlers/health.ts", "../../../src/lib/responses.ts", "../../../src/handlers/analysis/byHash.ts", "../../../src/lib/r2.ts", "../../../src/handlers/analysis/analyze.ts", "../../../src/handlers/analysis/byProductId.ts", "../../../src/handlers/search.ts", "../../../src/handlers/history.ts", "../../../src/lib/rateLimit.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../../../node_modules/wrangler/templates/middleware/common.ts"],
  "sourceRoot": "/mnt/c/Users/willi/Qwen3Online/backend/.wrangler/tmp/dev-iCjEdW",
  "sourcesContent": ["/* @__NO_SIDE_EFFECTS__ */\nexport function rawHeaders(headers) {\n\tconst rawHeaders = [];\n\tfor (const key in headers) {\n\t\tif (Array.isArray(headers[key])) {\n\t\t\tfor (const h of headers[key]) {\n\t\t\t\trawHeaders.push(key, h);\n\t\t\t}\n\t\t} else {\n\t\t\trawHeaders.push(key, headers[key]);\n\t\t}\n\t}\n\treturn rawHeaders;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function mergeFns(...functions) {\n\treturn function(...args) {\n\t\tfor (const fn of functions) {\n\t\t\tfn(...args);\n\t\t}\n\t};\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function createNotImplementedError(name) {\n\treturn new Error(`[unenv] ${name} is not implemented yet!`);\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplemented(name) {\n\tconst fn = () => {\n\t\tthrow createNotImplementedError(name);\n\t};\n\treturn Object.assign(fn, { __unenv__: true });\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedAsync(name) {\n\tconst fn = notImplemented(name);\n\tfn.__promisify__ = () => notImplemented(name + \".__promisify__\");\n\tfn.native = fn;\n\treturn fn;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedClass(name) {\n\treturn class {\n\t\t__unenv__ = true;\n\t\tconstructor() {\n\t\t\tthrow new Error(`[unenv] ${name} is not implemented yet!`);\n\t\t}\n\t};\n}\n", "import { createNotImplementedError } from \"../../../_internal/utils.mjs\";\nconst _timeOrigin = globalThis.performance?.timeOrigin ?? Date.now();\nconst _performanceNow = globalThis.performance?.now ? globalThis.performance.now.bind(globalThis.performance) : () => Date.now() - _timeOrigin;\nconst nodeTiming = {\n\tname: \"node\",\n\tentryType: \"node\",\n\tstartTime: 0,\n\tduration: 0,\n\tnodeStart: 0,\n\tv8Start: 0,\n\tbootstrapComplete: 0,\n\tenvironment: 0,\n\tloopStart: 0,\n\tloopExit: 0,\n\tidleTime: 0,\n\tuvMetricsInfo: {\n\t\tloopCount: 0,\n\t\tevents: 0,\n\t\teventsWaiting: 0\n\t},\n\tdetail: undefined,\n\ttoJSON() {\n\t\treturn this;\n\t}\n};\n// PerformanceEntry\nexport class PerformanceEntry {\n\t__unenv__ = true;\n\tdetail;\n\tentryType = \"event\";\n\tname;\n\tstartTime;\n\tconstructor(name, options) {\n\t\tthis.name = name;\n\t\tthis.startTime = options?.startTime || _performanceNow();\n\t\tthis.detail = options?.detail;\n\t}\n\tget duration() {\n\t\treturn _performanceNow() - this.startTime;\n\t}\n\ttoJSON() {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tentryType: this.entryType,\n\t\t\tstartTime: this.startTime,\n\t\t\tduration: this.duration,\n\t\t\tdetail: this.detail\n\t\t};\n\t}\n}\n// PerformanceMark\nexport const PerformanceMark = class PerformanceMark extends PerformanceEntry {\n\tentryType = \"mark\";\n\tconstructor() {\n\t\t// @ts-ignore\n\t\tsuper(...arguments);\n\t}\n\tget duration() {\n\t\treturn 0;\n\t}\n};\n// PerformanceMark\nexport class PerformanceMeasure extends PerformanceEntry {\n\tentryType = \"measure\";\n}\n// PerformanceResourceTiming\nexport class PerformanceResourceTiming extends PerformanceEntry {\n\tentryType = \"resource\";\n\tserverTiming = [];\n\tconnectEnd = 0;\n\tconnectStart = 0;\n\tdecodedBodySize = 0;\n\tdomainLookupEnd = 0;\n\tdomainLookupStart = 0;\n\tencodedBodySize = 0;\n\tfetchStart = 0;\n\tinitiatorType = \"\";\n\tname = \"\";\n\tnextHopProtocol = \"\";\n\tredirectEnd = 0;\n\tredirectStart = 0;\n\trequestStart = 0;\n\tresponseEnd = 0;\n\tresponseStart = 0;\n\tsecureConnectionStart = 0;\n\tstartTime = 0;\n\ttransferSize = 0;\n\tworkerStart = 0;\n\tresponseStatus = 0;\n}\n// PerformanceObserverEntryList\nexport class PerformanceObserverEntryList {\n\t__unenv__ = true;\n\tgetEntries() {\n\t\treturn [];\n\t}\n\tgetEntriesByName(_name, _type) {\n\t\treturn [];\n\t}\n\tgetEntriesByType(type) {\n\t\treturn [];\n\t}\n}\n// Performance\nexport class Performance {\n\t__unenv__ = true;\n\ttimeOrigin = _timeOrigin;\n\teventCounts = new Map();\n\t_entries = [];\n\t_resourceTimingBufferSize = 0;\n\tnavigation = undefined;\n\ttiming = undefined;\n\ttimerify(_fn, _options) {\n\t\tthrow createNotImplementedError(\"Performance.timerify\");\n\t}\n\tget nodeTiming() {\n\t\treturn nodeTiming;\n\t}\n\teventLoopUtilization() {\n\t\treturn {};\n\t}\n\tmarkResourceTiming() {\n\t\t// TODO: create a new PerformanceResourceTiming entry\n\t\t// so that performance.getEntries, getEntriesByName, and getEntriesByType return it\n\t\t// see: https://nodejs.org/api/perf_hooks.html#performancemarkresourcetimingtiminginfo-requestedurl-initiatortype-global-cachemode-bodyinfo-responsestatus-deliverytype\n\t\treturn new PerformanceResourceTiming(\"\");\n\t}\n\tonresourcetimingbufferfull = null;\n\tnow() {\n\t\t// https://developer.mozilla.org/en-US/docs/Web/API/Performance/now\n\t\tif (this.timeOrigin === _timeOrigin) {\n\t\t\treturn _performanceNow();\n\t\t}\n\t\treturn Date.now() - this.timeOrigin;\n\t}\n\tclearMarks(markName) {\n\t\tthis._entries = markName ? this._entries.filter((e) => e.name !== markName) : this._entries.filter((e) => e.entryType !== \"mark\");\n\t}\n\tclearMeasures(measureName) {\n\t\tthis._entries = measureName ? this._entries.filter((e) => e.name !== measureName) : this._entries.filter((e) => e.entryType !== \"measure\");\n\t}\n\tclearResourceTimings() {\n\t\tthis._entries = this._entries.filter((e) => e.entryType !== \"resource\" || e.entryType !== \"navigation\");\n\t}\n\tgetEntries() {\n\t\treturn this._entries;\n\t}\n\tgetEntriesByName(name, type) {\n\t\treturn this._entries.filter((e) => e.name === name && (!type || e.entryType === type));\n\t}\n\tgetEntriesByType(type) {\n\t\treturn this._entries.filter((e) => e.entryType === type);\n\t}\n\tmark(name, options) {\n\t\t// @ts-expect-error constructor is not protected\n\t\tconst entry = new PerformanceMark(name, options);\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tmeasure(measureName, startOrMeasureOptions, endMark) {\n\t\tlet start;\n\t\tlet end;\n\t\tif (typeof startOrMeasureOptions === \"string\") {\n\t\t\tstart = this.getEntriesByName(startOrMeasureOptions, \"mark\")[0]?.startTime;\n\t\t\tend = this.getEntriesByName(endMark, \"mark\")[0]?.startTime;\n\t\t} else {\n\t\t\tstart = Number.parseFloat(startOrMeasureOptions?.start) || this.now();\n\t\t\tend = Number.parseFloat(startOrMeasureOptions?.end) || this.now();\n\t\t}\n\t\tconst entry = new PerformanceMeasure(measureName, {\n\t\t\tstartTime: start,\n\t\t\tdetail: {\n\t\t\t\tstart,\n\t\t\t\tend\n\t\t\t}\n\t\t});\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tsetResourceTimingBufferSize(maxSize) {\n\t\tthis._resourceTimingBufferSize = maxSize;\n\t}\n\taddEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.addEventListener\");\n\t}\n\tremoveEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.removeEventListener\");\n\t}\n\tdispatchEvent(event) {\n\t\tthrow createNotImplementedError(\"Performance.dispatchEvent\");\n\t}\n\ttoJSON() {\n\t\treturn this;\n\t}\n}\n// PerformanceObserver\nexport class PerformanceObserver {\n\t__unenv__ = true;\n\tstatic supportedEntryTypes = [];\n\t_callback = null;\n\tconstructor(callback) {\n\t\tthis._callback = callback;\n\t}\n\ttakeRecords() {\n\t\treturn [];\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.disconnect\");\n\t}\n\tobserve(options) {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.observe\");\n\t}\n\tbind(fn) {\n\t\treturn fn;\n\t}\n\trunInAsyncScope(fn, thisArg, ...args) {\n\t\treturn fn.call(thisArg, ...args);\n\t}\n\tasyncId() {\n\t\treturn 0;\n\t}\n\ttriggerAsyncId() {\n\t\treturn 0;\n\t}\n\temitDestroy() {\n\t\treturn this;\n\t}\n}\n// workerd implements a subset of globalThis.performance (as of last check, only timeOrigin set to 0 + now() implemented)\n// We already use performance.now() from globalThis.performance, if provided (see top of this file)\n// If we detect this condition, we can just use polyfill instead.\nexport const performance = globalThis.performance && \"addEventListener\" in globalThis.performance ? globalThis.performance : new Performance();\n", "import { IntervalHistogram, RecordableHistogram } from \"./internal/perf_hooks/histogram.mjs\";\nimport { performance, Performance, PerformanceEntry, PerformanceMark, PerformanceMeasure, PerformanceObserverEntryList, PerformanceObserver, PerformanceResourceTiming } from \"./internal/perf_hooks/performance.mjs\";\nexport * from \"./internal/perf_hooks/performance.mjs\";\n// prettier-ignore\nimport { NODE_PERFORMANCE_GC_MAJOR, NODE_PERFORMANCE_GC_MINOR, NODE_PERFORMANCE_GC_INCREMENTAL, NODE_PERFORMANCE_GC_WEAKCB, NODE_PERFORMANCE_GC_FLAGS_NO, NODE_PERFORMANCE_GC_FLAGS_CONSTRUCT_RETAINED, NODE_PERFORMANCE_GC_FLAGS_FORCED, NODE_PERFORMANCE_GC_FLAGS_SYNCHRONOUS_PHANTOM_PROCESSING, NODE_PERFORMANCE_GC_FLAGS_ALL_AVAILABLE_GARBAGE, NODE_PERFORMANCE_GC_FLAGS_ALL_EXTERNAL_MEMORY, NODE_PERFORMANCE_GC_FLAGS_SCHEDULE_IDLE, NODE_PERFORMANCE_ENTRY_TYPE_GC, NODE_PERFORMANCE_ENTRY_TYPE_HTTP, NODE_PERFORMANCE_ENTRY_TYPE_HTTP2, NODE_PERFORMANCE_ENTRY_TYPE_NET, NODE_PERFORMANCE_ENTRY_TYPE_DNS, NODE_PERFORMANCE_MILESTONE_TIME_ORIGIN_TIMESTAMP, NODE_PERFORMANCE_MILESTONE_TIME_ORIGIN, NODE_PERFORMANCE_MILESTONE_ENVIRONMENT, NODE_PERFORMANCE_MILESTONE_NODE_START, NODE_PERFORMANCE_MILESTONE_V8_START, NODE_PERFORMANCE_MILESTONE_LOOP_START, NODE_PERFORMANCE_MILESTONE_LOOP_EXIT, NODE_PERFORMANCE_MILESTONE_BOOTSTRAP_COMPLETE } from \"./internal/perf_hooks/constants.mjs\";\n// prettier-ignore\nexport const constants = {\n\tNODE_PERFORMANCE_GC_MAJOR,\n\tNODE_PERFORMANCE_GC_MINOR,\n\tNODE_PERFORMANCE_GC_INCREMENTAL,\n\tNODE_PERFORMANCE_GC_WEAKCB,\n\tNODE_PERFORMANCE_GC_FLAGS_NO,\n\tNODE_PERFORMANCE_GC_FLAGS_CONSTRUCT_RETAINED,\n\tNODE_PERFORMANCE_GC_FLAGS_FORCED,\n\tNODE_PERFORMANCE_GC_FLAGS_SYNCHRONOUS_PHANTOM_PROCESSING,\n\tNODE_PERFORMANCE_GC_FLAGS_ALL_AVAILABLE_GARBAGE,\n\tNODE_PERFORMANCE_GC_FLAGS_ALL_EXTERNAL_MEMORY,\n\tNODE_PERFORMANCE_GC_FLAGS_SCHEDULE_IDLE,\n\tNODE_PERFORMANCE_ENTRY_TYPE_GC,\n\tNODE_PERFORMANCE_ENTRY_TYPE_HTTP,\n\tNODE_PERFORMANCE_ENTRY_TYPE_HTTP2,\n\tNODE_PERFORMANCE_ENTRY_TYPE_NET,\n\tNODE_PERFORMANCE_ENTRY_TYPE_DNS,\n\tNODE_PERFORMANCE_MILESTONE_TIME_ORIGIN_TIMESTAMP,\n\tNODE_PERFORMANCE_MILESTONE_TIME_ORIGIN,\n\tNODE_PERFORMANCE_MILESTONE_ENVIRONMENT,\n\tNODE_PERFORMANCE_MILESTONE_NODE_START,\n\tNODE_PERFORMANCE_MILESTONE_V8_START,\n\tNODE_PERFORMANCE_MILESTONE_LOOP_START,\n\tNODE_PERFORMANCE_MILESTONE_LOOP_EXIT,\n\tNODE_PERFORMANCE_MILESTONE_BOOTSTRAP_COMPLETE\n};\nexport const monitorEventLoopDelay = function(_options) {\n\treturn new IntervalHistogram();\n};\nexport const createHistogram = function(_options) {\n\treturn new RecordableHistogram();\n};\nexport default {\n\tPerformance,\n\tPerformanceMark,\n\tPerformanceEntry,\n\tPerformanceMeasure,\n\tPerformanceObserverEntryList,\n\tPerformanceObserver,\n\tPerformanceResourceTiming,\n\tperformance,\n\tconstants,\n\tcreateHistogram,\n\tmonitorEventLoopDelay\n};\n", "import {\n  performance,\n  Performance,\n  PerformanceEntry,\n  PerformanceMark,\n  PerformanceMeasure,\n  PerformanceObserver,\n  PerformanceObserverEntryList,\n  PerformanceResourceTiming\n} from \"node:perf_hooks\";\nglobalThis.performance = performance;\nglobalThis.Performance = Performance;\nglobalThis.PerformanceEntry = PerformanceEntry;\nglobalThis.PerformanceMark = PerformanceMark;\nglobalThis.PerformanceMeasure = PerformanceMeasure;\nglobalThis.PerformanceObserver = PerformanceObserver;\nglobalThis.PerformanceObserverEntryList = PerformanceObserverEntryList;\nglobalThis.PerformanceResourceTiming = PerformanceResourceTiming;\n", "export default Object.assign(() => {}, { __unenv__: true });\n", "import { Writable } from \"node:stream\";\nimport noop from \"../mock/noop.mjs\";\nimport { notImplemented, notImplementedClass } from \"../_internal/utils.mjs\";\nconst _console = globalThis.console;\n// undocumented public APIs\nexport const _ignoreErrors = true;\nexport const _stderr = new Writable();\nexport const _stdout = new Writable();\nexport const log = _console?.log ?? noop;\nexport const info = _console?.info ?? log;\nexport const trace = _console?.trace ?? info;\nexport const debug = _console?.debug ?? log;\nexport const table = _console?.table ?? log;\nexport const error = _console?.error ?? log;\nexport const warn = _console?.warn ?? error;\n// https://developer.chrome.com/docs/devtools/console/api#createtask\nexport const createTask = _console?.createTask ?? /* @__PURE__ */ notImplemented(\"console.createTask\");\nexport const assert = /* @__PURE__ */ notImplemented(\"console.assert\");\n// noop\nexport const clear = _console?.clear ?? noop;\nexport const count = _console?.count ?? noop;\nexport const countReset = _console?.countReset ?? noop;\nexport const dir = _console?.dir ?? noop;\nexport const dirxml = _console?.dirxml ?? noop;\nexport const group = _console?.group ?? noop;\nexport const groupEnd = _console?.groupEnd ?? noop;\nexport const groupCollapsed = _console?.groupCollapsed ?? noop;\nexport const profile = _console?.profile ?? noop;\nexport const profileEnd = _console?.profileEnd ?? noop;\nexport const time = _console?.time ?? noop;\nexport const timeEnd = _console?.timeEnd ?? noop;\nexport const timeLog = _console?.timeLog ?? noop;\nexport const timeStamp = _console?.timeStamp ?? noop;\nexport const Console = _console?.Console ?? /* @__PURE__ */ notImplementedClass(\"console.Console\");\nexport const _times = /* @__PURE__ */ new Map();\nexport function context() {\n\t// TODO: Should be Console with all the methods\n\treturn _console;\n}\nexport const _stdoutErrorHandler = noop;\nexport const _stderrErrorHandler = noop;\nexport default {\n\t_times,\n\t_ignoreErrors,\n\t_stdoutErrorHandler,\n\t_stderrErrorHandler,\n\t_stdout,\n\t_stderr,\n\tassert,\n\tclear,\n\tConsole,\n\tcount,\n\tcountReset,\n\tdebug,\n\tdir,\n\tdirxml,\n\terror,\n\tcontext,\n\tcreateTask,\n\tgroup,\n\tgroupEnd,\n\tgroupCollapsed,\n\tinfo,\n\tlog,\n\tprofile,\n\tprofileEnd,\n\ttable,\n\ttime,\n\ttimeEnd,\n\ttimeLog,\n\ttimeStamp,\n\ttrace,\n\twarn\n};\n", "import {\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times,\n  Console\n} from \"unenv/node/console\";\nexport {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n} from \"unenv/node/console\";\nconst workerdConsole = globalThis[\"console\"];\nexport const {\n  assert,\n  clear,\n  // @ts-expect-error undocumented public API\n  context,\n  count,\n  countReset,\n  // @ts-expect-error undocumented public API\n  createTask,\n  debug,\n  dir,\n  dirxml,\n  error,\n  group,\n  groupCollapsed,\n  groupEnd,\n  info,\n  log,\n  profile,\n  profileEnd,\n  table,\n  time,\n  timeEnd,\n  timeLog,\n  timeStamp,\n  trace,\n  warn\n} = workerdConsole;\nObject.assign(workerdConsole, {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n});\nexport default workerdConsole;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/console\";\nglobalThis.console = defaultExport;", "// https://nodejs.org/api/process.html#processhrtime\nexport const hrtime = /* @__PURE__ */ Object.assign(function hrtime(startTime) {\n\tconst now = Date.now();\n\t// millis to seconds\n\tconst seconds = Math.trunc(now / 1e3);\n\t// convert millis to nanos\n\tconst nanos = now % 1e3 * 1e6;\n\tif (startTime) {\n\t\tlet diffSeconds = seconds - startTime[0];\n\t\tlet diffNanos = nanos - startTime[0];\n\t\tif (diffNanos < 0) {\n\t\t\tdiffSeconds = diffSeconds - 1;\n\t\t\tdiffNanos = 1e9 + diffNanos;\n\t\t}\n\t\treturn [diffSeconds, diffNanos];\n\t}\n\treturn [seconds, nanos];\n}, { bigint: function bigint() {\n\t// Convert milliseconds to nanoseconds\n\treturn BigInt(Date.now() * 1e6);\n} });\n", "export class WriteStream {\n\tfd;\n\tcolumns = 80;\n\trows = 24;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tclearLine(dir, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tclearScreenDown(callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tcursorTo(x, y, callback) {\n\t\tcallback && typeof callback === \"function\" && callback();\n\t\treturn false;\n\t}\n\tmoveCursor(dx, dy, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tgetColorDepth(env) {\n\t\treturn 1;\n\t}\n\thasColors(count, env) {\n\t\treturn false;\n\t}\n\tgetWindowSize() {\n\t\treturn [this.columns, this.rows];\n\t}\n\twrite(str, encoding, cb) {\n\t\tif (str instanceof Uint8Array) {\n\t\t\tstr = new TextDecoder().decode(str);\n\t\t}\n\t\ttry {\n\t\t\tconsole.log(str);\n\t\t} catch {}\n\t\tcb && typeof cb === \"function\" && cb();\n\t\treturn false;\n\t}\n}\n", "export class ReadStream {\n\tfd;\n\tisRaw = false;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tsetRawMode(mode) {\n\t\tthis.isRaw = mode;\n\t\treturn this;\n\t}\n}\n", "import { WriteStream } from \"./internal/tty/write-stream.mjs\";\nexport { ReadStream } from \"./internal/tty/read-stream.mjs\";\nexport { WriteStream } from \"./internal/tty/write-stream.mjs\";\nexport const isatty = function() {\n\treturn false;\n};\nexport default {\n\tReadStream: WriteStream,\n\tWriteStream,\n\tisatty\n};\n", "// Extracted from .nvmrc\nexport const NODE_VERSION = \"22.14.0\";\n", "import { EventEmitter } from \"node:events\";\nimport { ReadStream, WriteStream } from \"node:tty\";\nimport { notImplemented, createNotImplementedError } from \"../../../_internal/utils.mjs\";\n// node-version.ts is generated at build time\nimport { NODE_VERSION } from \"./node-version.mjs\";\nexport class Process extends EventEmitter {\n\tenv;\n\thrtime;\n\tnextTick;\n\tconstructor(impl) {\n\t\tsuper();\n\t\tthis.env = impl.env;\n\t\tthis.hrtime = impl.hrtime;\n\t\tthis.nextTick = impl.nextTick;\n\t\tfor (const prop of [...Object.getOwnPropertyNames(Process.prototype), ...Object.getOwnPropertyNames(EventEmitter.prototype)]) {\n\t\t\tconst value = this[prop];\n\t\t\tif (typeof value === \"function\") {\n\t\t\t\tthis[prop] = value.bind(this);\n\t\t\t}\n\t\t}\n\t}\n\t// --- event emitter ---\n\temitWarning(warning, type, code) {\n\t\tconsole.warn(`${code ? `[${code}] ` : \"\"}${type ? `${type}: ` : \"\"}${warning}`);\n\t}\n\temit(...args) {\n\t\t// @ts-ignore\n\t\treturn super.emit(...args);\n\t}\n\tlisteners(eventName) {\n\t\treturn super.listeners(eventName);\n\t}\n\t// --- stdio (lazy initializers) ---\n\t#stdin;\n\t#stdout;\n\t#stderr;\n\tget stdin() {\n\t\treturn this.#stdin ??= new ReadStream(0);\n\t}\n\tget stdout() {\n\t\treturn this.#stdout ??= new WriteStream(1);\n\t}\n\tget stderr() {\n\t\treturn this.#stderr ??= new WriteStream(2);\n\t}\n\t// --- cwd ---\n\t#cwd = \"/\";\n\tchdir(cwd) {\n\t\tthis.#cwd = cwd;\n\t}\n\tcwd() {\n\t\treturn this.#cwd;\n\t}\n\t// --- dummy props and getters ---\n\tarch = \"\";\n\tplatform = \"\";\n\targv = [];\n\targv0 = \"\";\n\texecArgv = [];\n\texecPath = \"\";\n\ttitle = \"\";\n\tpid = 200;\n\tppid = 100;\n\tget version() {\n\t\treturn `v${NODE_VERSION}`;\n\t}\n\tget versions() {\n\t\treturn { node: NODE_VERSION };\n\t}\n\tget allowedNodeEnvironmentFlags() {\n\t\treturn new Set();\n\t}\n\tget sourceMapsEnabled() {\n\t\treturn false;\n\t}\n\tget debugPort() {\n\t\treturn 0;\n\t}\n\tget throwDeprecation() {\n\t\treturn false;\n\t}\n\tget traceDeprecation() {\n\t\treturn false;\n\t}\n\tget features() {\n\t\treturn {};\n\t}\n\tget release() {\n\t\treturn {};\n\t}\n\tget connected() {\n\t\treturn false;\n\t}\n\tget config() {\n\t\treturn {};\n\t}\n\tget moduleLoadList() {\n\t\treturn [];\n\t}\n\tconstrainedMemory() {\n\t\treturn 0;\n\t}\n\tavailableMemory() {\n\t\treturn 0;\n\t}\n\tuptime() {\n\t\treturn 0;\n\t}\n\tresourceUsage() {\n\t\treturn {};\n\t}\n\t// --- noop methods ---\n\tref() {\n\t\t// noop\n\t}\n\tunref() {\n\t\t// noop\n\t}\n\t// --- unimplemented methods ---\n\tumask() {\n\t\tthrow createNotImplementedError(\"process.umask\");\n\t}\n\tgetBuiltinModule() {\n\t\treturn undefined;\n\t}\n\tgetActiveResourcesInfo() {\n\t\tthrow createNotImplementedError(\"process.getActiveResourcesInfo\");\n\t}\n\texit() {\n\t\tthrow createNotImplementedError(\"process.exit\");\n\t}\n\treallyExit() {\n\t\tthrow createNotImplementedError(\"process.reallyExit\");\n\t}\n\tkill() {\n\t\tthrow createNotImplementedError(\"process.kill\");\n\t}\n\tabort() {\n\t\tthrow createNotImplementedError(\"process.abort\");\n\t}\n\tdlopen() {\n\t\tthrow createNotImplementedError(\"process.dlopen\");\n\t}\n\tsetSourceMapsEnabled() {\n\t\tthrow createNotImplementedError(\"process.setSourceMapsEnabled\");\n\t}\n\tloadEnvFile() {\n\t\tthrow createNotImplementedError(\"process.loadEnvFile\");\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"process.disconnect\");\n\t}\n\tcpuUsage() {\n\t\tthrow createNotImplementedError(\"process.cpuUsage\");\n\t}\n\tsetUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.setUncaughtExceptionCaptureCallback\");\n\t}\n\thasUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.hasUncaughtExceptionCaptureCallback\");\n\t}\n\tinitgroups() {\n\t\tthrow createNotImplementedError(\"process.initgroups\");\n\t}\n\topenStdin() {\n\t\tthrow createNotImplementedError(\"process.openStdin\");\n\t}\n\tassert() {\n\t\tthrow createNotImplementedError(\"process.assert\");\n\t}\n\tbinding() {\n\t\tthrow createNotImplementedError(\"process.binding\");\n\t}\n\t// --- attached interfaces ---\n\tpermission = { has: /* @__PURE__ */ notImplemented(\"process.permission.has\") };\n\treport = {\n\t\tdirectory: \"\",\n\t\tfilename: \"\",\n\t\tsignal: \"SIGUSR2\",\n\t\tcompact: false,\n\t\treportOnFatalError: false,\n\t\treportOnSignal: false,\n\t\treportOnUncaughtException: false,\n\t\tgetReport: /* @__PURE__ */ notImplemented(\"process.report.getReport\"),\n\t\twriteReport: /* @__PURE__ */ notImplemented(\"process.report.writeReport\")\n\t};\n\tfinalization = {\n\t\tregister: /* @__PURE__ */ notImplemented(\"process.finalization.register\"),\n\t\tunregister: /* @__PURE__ */ notImplemented(\"process.finalization.unregister\"),\n\t\tregisterBeforeExit: /* @__PURE__ */ notImplemented(\"process.finalization.registerBeforeExit\")\n\t};\n\tmemoryUsage = Object.assign(() => ({\n\t\tarrayBuffers: 0,\n\t\trss: 0,\n\t\texternal: 0,\n\t\theapTotal: 0,\n\t\theapUsed: 0\n\t}), { rss: () => 0 });\n\t// --- undefined props ---\n\tmainModule = undefined;\n\tdomain = undefined;\n\t// optional\n\tsend = undefined;\n\texitCode = undefined;\n\tchannel = undefined;\n\tgetegid = undefined;\n\tgeteuid = undefined;\n\tgetgid = undefined;\n\tgetgroups = undefined;\n\tgetuid = undefined;\n\tsetegid = undefined;\n\tseteuid = undefined;\n\tsetgid = undefined;\n\tsetgroups = undefined;\n\tsetuid = undefined;\n\t// internals\n\t_events = undefined;\n\t_eventsCount = undefined;\n\t_exiting = undefined;\n\t_maxListeners = undefined;\n\t_debugEnd = undefined;\n\t_debugProcess = undefined;\n\t_fatalException = undefined;\n\t_getActiveHandles = undefined;\n\t_getActiveRequests = undefined;\n\t_kill = undefined;\n\t_preload_modules = undefined;\n\t_rawDebug = undefined;\n\t_startProfilerIdleNotifier = undefined;\n\t_stopProfilerIdleNotifier = undefined;\n\t_tickCallback = undefined;\n\t_disconnect = undefined;\n\t_handleQueue = undefined;\n\t_pendingMessage = undefined;\n\t_channel = undefined;\n\t_send = undefined;\n\t_linkedBinding = undefined;\n}\n", "import { hrtime as UnenvHrTime } from \"unenv/node/internal/process/hrtime\";\nimport { Process as UnenvProcess } from \"unenv/node/internal/process/process\";\nconst globalProcess = globalThis[\"process\"];\nexport const getBuiltinModule = globalProcess.getBuiltinModule;\nexport const { exit, platform, nextTick } = getBuiltinModule(\n  \"node:process\"\n);\nconst unenvProcess = new UnenvProcess({\n  env: globalProcess.env,\n  hrtime: UnenvHrTime,\n  nextTick\n});\nexport const {\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  hasUncaughtExceptionCaptureCallback,\n  setUncaughtExceptionCaptureCallback,\n  loadEnvFile,\n  sourceMapsEnabled,\n  arch,\n  argv,\n  argv0,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  availableMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  disconnect,\n  emit,\n  emitWarning,\n  env,\n  eventNames,\n  execArgv,\n  execPath,\n  finalization,\n  features,\n  getActiveResourcesInfo,\n  getMaxListeners,\n  hrtime,\n  kill,\n  listeners,\n  listenerCount,\n  memoryUsage,\n  on,\n  off,\n  once,\n  pid,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  title,\n  throwDeprecation,\n  traceDeprecation,\n  umask,\n  uptime,\n  version,\n  versions,\n  domain,\n  initgroups,\n  moduleLoadList,\n  reallyExit,\n  openStdin,\n  assert,\n  binding,\n  send,\n  exitCode,\n  channel,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getuid,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setuid,\n  permission,\n  mainModule,\n  _events,\n  _eventsCount,\n  _exiting,\n  _maxListeners,\n  _debugEnd,\n  _debugProcess,\n  _fatalException,\n  _getActiveHandles,\n  _getActiveRequests,\n  _kill,\n  _preload_modules,\n  _rawDebug,\n  _startProfilerIdleNotifier,\n  _stopProfilerIdleNotifier,\n  _tickCallback,\n  _disconnect,\n  _handleQueue,\n  _pendingMessage,\n  _channel,\n  _send,\n  _linkedBinding\n} = unenvProcess;\nconst _process = {\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  hasUncaughtExceptionCaptureCallback,\n  setUncaughtExceptionCaptureCallback,\n  loadEnvFile,\n  sourceMapsEnabled,\n  arch,\n  argv,\n  argv0,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  availableMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  disconnect,\n  emit,\n  emitWarning,\n  env,\n  eventNames,\n  execArgv,\n  execPath,\n  exit,\n  finalization,\n  features,\n  getBuiltinModule,\n  getActiveResourcesInfo,\n  getMaxListeners,\n  hrtime,\n  kill,\n  listeners,\n  listenerCount,\n  memoryUsage,\n  nextTick,\n  on,\n  off,\n  once,\n  pid,\n  platform,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  title,\n  throwDeprecation,\n  traceDeprecation,\n  umask,\n  uptime,\n  version,\n  versions,\n  // @ts-expect-error old API\n  domain,\n  initgroups,\n  moduleLoadList,\n  reallyExit,\n  openStdin,\n  assert,\n  binding,\n  send,\n  exitCode,\n  channel,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getuid,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setuid,\n  permission,\n  mainModule,\n  _events,\n  _eventsCount,\n  _exiting,\n  _maxListeners,\n  _debugEnd,\n  _debugProcess,\n  _fatalException,\n  _getActiveHandles,\n  _getActiveRequests,\n  _kill,\n  _preload_modules,\n  _rawDebug,\n  _startProfilerIdleNotifier,\n  _stopProfilerIdleNotifier,\n  _tickCallback,\n  _disconnect,\n  _handleQueue,\n  _pendingMessage,\n  _channel,\n  _send,\n  _linkedBinding\n};\nexport default _process;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/process\";\nglobalThis.process = defaultExport;", "", "// `esbuild` doesn't support returning `watch*` options from `onStart()`\n// plugin callbacks. Instead, we define an empty virtual module that is\n// imported by this injected file. Importing the module registers watchers.\nimport \"wrangler:modules-watch\";\n", "import type { Env } from \"../index\";\r\n\r\nexport type Row = Record<string, unknown>;\r\n\r\nexport function getDb(env: Env): D1Database {\r\n  return env.LABELSLAYER_D1;\r\n}\r\n\r\nexport async function query<T = Row>(db: D1Database, sql: string, params: any[] = []): Promise<T[]> {\r\n  const stmt = db.prepare(sql);\r\n  const bound = params.length ? stmt.bind(...params) : stmt;\r\n  const res = await bound.all<T>();\r\n  return res.results || [];\r\n}\r\n\r\nexport async function run(db: D1Database, sql: string, params: any[] = []): Promise<void> {\r\n  const stmt = db.prepare(sql);\r\n  const bound = params.length ? stmt.bind(...params) : stmt;\r\n  await bound.run();\r\n}", "export async function makeEtag(obj: unknown, salt: string | undefined): Promise<string> {\r\n  const enc = new TextEncoder();\r\n  const input = JSON.stringify(obj ?? {}) + String(salt ?? \"\");\r\n  const data = enc.encode(input);\r\n  const digest = await crypto.subtle.digest(\"SHA-256\", data);\r\n  const bytes = Array.from(new Uint8Array(digest));\r\n  const hex = bytes.map((b) => b.toString(16).padStart(2, \"0\")).join(\"\");\r\n  return `\"W/${hex.slice(0, 32)}\"`; // weak ETag\r\n}", "import type { Env } from \"../index\";\r\n\r\ntype VisionInput =\r\n  | { imageUrl: string; pHash?: string }\r\n  | { imageBase64: string; mimeType?: string; pHash?: string };\r\n\r\nexport type VisionResult = {\r\n  ok: boolean;\r\n  summary: string;\r\n  tags: string[];\r\n  confidence: number;\r\n  source: \"stub\" | \"openai\";\r\n};\r\n\r\nexport async function requestGpt4oVision(env: Env, input: VisionInput, timeoutMs = 5000): Promise<VisionResult> {\r\n  if (!env.OPENAI_API_KEY) {\r\n    const marker = \"imageUrl\" in input ? input.imageUrl : input.imageBase64.slice(0, 16);\r\n    const pHash = \"pHash\" in input && input.pHash ? input.pHash : \"unknown\";\r\n    return {\r\n      ok: true,\r\n      summary: `Mock analysis for ${pHash}`,\r\n      tags: [\"mock\", \"label\", \"nutrition\"],\r\n      confidence: 0.42,\r\n      source: \"stub\",\r\n    };\r\n  }\r\n  // Real call outline (kept behind key presence, avoid leaking secrets)\r\n  const controller = new AbortController();\r\n  const id = setTimeout(() => controller.abort(), timeoutMs);\r\n  try {\r\n    const body = {\r\n      model: \"gpt-4o-mini\",\r\n      messages: [\r\n        {\r\n          role: \"user\",\r\n          content: [\r\n            { type: \"text\", text: \"Analyze this product label and summarize key nutrition and allergens.\" },\r\n            \"imageUrl\" in input\r\n              ? { type: \"image_url\", image_url: input.imageUrl }\r\n              : { type: \"image\", image_base64: input.imageBase64, mime_type: input.mimeType ?? \"image/jpeg\" },\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n    const res = await fetch((env.OPENAI_BASE_URL ?? \"https://api.openai.com/v1\") + \"/chat/completions\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Authorization\": `Bearer ${env.OPENAI_API_KEY}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(body),\r\n      signal: controller.signal,\r\n    });\r\n    const json = await res.json().catch(() => ({}));\r\n    const text =\r\n      json?.choices?.[0]?.message?.content ||\r\n      json?.choices?.[0]?.message?.text ||\r\n      \"No content from OpenAI\";\r\n    return {\r\n      ok: res.ok,\r\n      summary: String(text).slice(0, 512),\r\n      tags: [],\r\n      confidence: res.ok ? 0.9 : 0.0,\r\n      source: \"openai\",\r\n    };\r\n  } catch (_e) {\r\n    return {\r\n      ok: false,\r\n      summary: \"OpenAI request failed\",\r\n      tags: [],\r\n      confidence: 0,\r\n      source: \"openai\",\r\n    };\r\n  } finally {\r\n    clearTimeout(id);\r\n  }\r\n}", "import { ProductAnalysisData, IngredientAnalysis } from '../types/api';\nimport { run } from './db';\n\nexport function generateMockAnalysis(pHash: string): ProductAnalysisData {\n  // Deterministic mock based on pHash for consistent results\n  const hashNum = parseInt(pHash.substring(0, 4), 16);\n  const rating = 40 + (hashNum % 50); // 40-90 range\n  \n  // Generate different product types based on hash\n  const productTypes = ['Organic Milk', 'Whole Grain Bread', 'Greek Yogurt', 'Almond Butter', 'Protein Bar'];\n  const productIndex = hashNum % productTypes.length;\n  const baseProduct = productTypes[productIndex] || 'Generic Product';\n  \n  return {\n    name: `${baseProduct} ${pHash.substring(0, 6)}`,\n    description: `Analyzed ${baseProduct.toLowerCase()} product with pHash ${pHash}. ${rating >= 70 ? 'High quality ingredients with minimal processing.' : rating >= 50 ? 'Good quality with some processed ingredients.' : 'Highly processed with multiple additives.'}`,\n    rating,\n    ratingColor: rating >= 70 ? \"#4caf50\" : rating >= 50 ? \"#ff9800\" : \"#f44336\",\n    ingredients: generateMockIngredients(rating, productIndex),\n    concerns: rating < 60 ? generateMockConcerns(rating) : []\n  };\n}\n\nfunction generateMockIngredients(rating: number, productType: number): IngredientAnalysis[] {\n  const baseIngredients: IngredientAnalysis[] = [\n    {\n      name: \"Water\",\n      rating: \"neutral\",\n      description: \"Primary ingredient in most food products, provides hydration\",\n      benefits: [\"Hydration\", \"Solvent for nutrients\"],\n      concerns: []\n    }\n  ];\n\n  if (rating >= 70) {\n    // High quality product\n    baseIngredients.push({\n      name: \"Organic Oats\",\n      rating: \"good\", \n      description: \"Whole grain oats rich in fiber and protein\",\n      benefits: [\"Heart Health\", \"Fiber\", \"Sustained Energy\"],\n      concerns: []\n    });\n    baseIngredients.push({\n      name: \"Natural Vanilla Extract\",\n      rating: \"good\",\n      description: \"Pure vanilla extract from vanilla beans\",\n      benefits: [\"Natural Flavoring\", \"Antioxidants\"],\n      concerns: []\n    });\n  } else if (rating >= 50) {\n    // Medium quality\n    baseIngredients.push({\n      name: \"Enriched Flour\",\n      rating: \"neutral\",\n      description: \"Wheat flour with added vitamins and minerals\",\n      benefits: [\"Fortified Nutrients\", \"Energy\"],\n      concerns: [\"Processed Grain\"]\n    });\n    baseIngredients.push({\n      name: \"Natural Flavors\",\n      rating: \"neutral\", \n      description: \"Flavor compounds derived from natural sources\",\n      benefits: [\"Taste Enhancement\"],\n      concerns: [\"Vague Labeling\"]\n    });\n  } else {\n    // Lower quality\n    baseIngredients.push({\n      name: \"High Fructose Corn Syrup\",\n      rating: \"bad\",\n      description: \"Processed sweetener linked to health concerns\",\n      benefits: [\"Sweetness\", \"Preservation\"],\n      concerns: [\"Blood Sugar Spikes\", \"Linked to Obesity\"]\n    });\n    baseIngredients.push({\n      name: \"Artificial Colors\",\n      rating: \"bad\",\n      description: \"Synthetic food coloring agents\",\n      benefits: [\"Visual Appeal\"],\n      concerns: [\"Hyperactivity in Children\", \"Artificial Additives\"]\n    });\n  }\n\n  return baseIngredients;\n}\n\nfunction generateMockConcerns(rating: number): string[] {\n  const concerns = [];\n  \n  if (rating < 40) {\n    concerns.push(\"High in artificial additives and preservatives\");\n    concerns.push(\"Contains multiple processed ingredients\");\n    concerns.push(\"High sugar content (>15g per serving)\");\n  } else if (rating < 60) {\n    concerns.push(\"Contains some processed ingredients\");\n    concerns.push(\"Moderate sugar content\");\n  }\n  \n  return concerns;\n}\n\nexport async function createOrFindProduct(\n  analysisData: ProductAnalysisData, \n  db: Parameters<typeof run>[0]\n): Promise<string> {\n  const productId = `prod-${crypto.randomUUID()}`;\n  \n  try {\n    await run(\n      db,\n      `INSERT OR IGNORE INTO products (id, name, brand, analysis_generated, created_at, updated_at)\n       VALUES (?, ?, ?, ?, ?, ?)`,\n      [\n        productId,\n        analysisData.name,\n        null, // Extract from AI if available in future\n        true,\n        new Date().toISOString(),\n        new Date().toISOString()\n      ]\n    );\n    \n    return productId;\n  } catch (error) {\n    console.error('Error creating product:', error);\n    throw new Error('Failed to create product record');\n  }\n}\n\n// Future: Real AI analysis function\nexport async function parseAIAnalysis(visionResult: string): Promise<ProductAnalysisData> {\n  // TODO: Implement OpenAI GPT-4o vision result parsing\n  // For now, return enhanced mock\n  return generateMockAnalysis(Math.random().toString(36).substring(7));\n}", "import type { Env } from \"../index\";\r\nimport { getDb, query, run } from \"../lib/db\";\r\nimport { makeEtag } from \"../lib/etag\";\r\nimport { callContext7, callSequential } from \"../lib/mcp\";\r\nimport { requestGpt4oVision } from \"../lib/openai\";\r\nimport { generateMockAnalysis, createOrFindProduct, parseAIAnalysis } from \"../lib/aiAnalysis\";\r\nimport { ProductAnalysisData } from \"../types/api\";\r\n\r\ntype AnalysisJob = {\r\n  analysisId: string;\r\n  pHash: string;\r\n  r2Key?: string | null;\r\n  image?: { url?: string; base64Size?: number };\r\n};\r\n\r\nexport async function processAnalysisJob(msg: { body: AnalysisJob }, env: Env, _ctx: ExecutionContext): Promise<void> {\r\n  const { analysisId, pHash } = msg.body;\r\n  const db = getDb(env);\r\n\r\n  // Idempotency: load existing record status\r\n  const existing = await query<any>(\r\n    db,\r\n    `SELECT status FROM analysis_records WHERE analysis_id = ? LIMIT 1`,\r\n    [analysisId]\r\n  );\r\n  if (!existing.length) {\r\n    // Unknown job; ignore\r\n    return;\r\n  }\r\n  const current = String(existing[0].status);\r\n  if (current === \"succeeded\" || current === \"failed\") {\r\n    return; // already done\r\n  }\r\n\r\n  // If there is already a latest succeeded record for this pHash at current schema version, skip re-analysis\r\n  const latest = await query<any>(\r\n    db,\r\n    `SELECT analysis_id, summary, etag, product_id, analysis_data_json\r\n     FROM analysis_records\r\n     WHERE phash = ? AND status = 'succeeded'\r\n     ORDER BY updated_at DESC\r\n     LIMIT 1`,\r\n    [pHash]\r\n  );\r\n  if (latest.length) {\r\n    // Link current analysis_id to the same product and etag without recomputation\r\n    const { product_id, summary, etag, analysis_data_json } = latest[0];\r\n    await run(\r\n      db,\r\n      `UPDATE analysis_records\r\n       SET status = 'succeeded', summary = ?, etag = ?, product_id = ?, analysis_data_json = ?, updated_at = ?\r\n       WHERE analysis_id = ?`,\r\n      [summary ?? null, etag ?? null, product_id ?? null, analysis_data_json ?? null, new Date().toISOString(), analysisId]\r\n    );\r\n    return;\r\n  }\r\n\r\n  // Set processing\r\n  const nowIso = new Date().toISOString();\r\n  await run(\r\n    db,\r\n    `UPDATE analysis_records SET status = 'processing', updated_at = ? WHERE analysis_id = ?`,\r\n    [nowIso, analysisId]\r\n  );\r\n\r\n  // Decide stub vs real calls (mock path when OPENAI_API_KEY unset)\r\n  const mcpConfigured = Boolean(env.MCP_CONTEXT7_ENDPOINT || env.MCP_SEQUENTIAL_ENDPOINT);\r\n  const openaiConfigured = Boolean(env.OPENAI_API_KEY);\r\n\r\n  let analysisData: ProductAnalysisData;\r\n  let productId: string;\r\n\r\n  try {\r\n    if (!mcpConfigured || !openaiConfigured) {\r\n      // Enhanced mock with structured data\r\n      console.log(`Generating mock analysis for pHash: ${pHash}`);\r\n      analysisData = generateMockAnalysis(pHash);\r\n      productId = await createOrFindProduct(analysisData, db);\r\n    } else {\r\n      // Real AI analysis (future implementation)\r\n      console.log(`Performing AI analysis for pHash: ${pHash}`);\r\n      try {\r\n        const visionResult = await requestGpt4oVision(env, { \r\n          imageUrl: msg.body.image?.url ?? \"about:blank\", \r\n          pHash \r\n        });\r\n        analysisData = await parseAIAnalysis(visionResult.summary || \"\");\r\n        productId = await createOrFindProduct(analysisData, db);\r\n      } catch (aiError) {\r\n        console.warn('AI analysis failed, falling back to mock:', aiError);\r\n        analysisData = generateMockAnalysis(pHash);\r\n        productId = await createOrFindProduct(analysisData, db);\r\n      }\r\n    }\r\n\r\n    // ETag computed from stable payload + schema salt\r\n    const etag = await makeEtag({ analysisId, pHash, analysisData, schemaVersion: env.SCHEMA_VERSION }, env.ETAG_SALT);\r\n\r\n    // Store structured data in database\r\n    await run(\r\n      db,\r\n      `UPDATE analysis_records \r\n       SET status = 'succeeded', \r\n           summary = ?, \r\n           analysis_data_json = ?, \r\n           product_id = ?, \r\n           etag = ?, \r\n           updated_at = ?\r\n       WHERE analysis_id = ?`,\r\n      [\r\n        analysisData.description, // Keep summary for backward compatibility\r\n        JSON.stringify(analysisData),\r\n        productId,\r\n        etag,\r\n        new Date().toISOString(),\r\n        analysisId\r\n      ]\r\n    );\r\n\r\n    console.log(`Analysis completed for ${analysisId}, created product ${productId}`);\r\n  } catch (error) {\r\n    console.error('Analysis worker error:', error);\r\n    await run(\r\n      db,\r\n      `UPDATE analysis_records SET status = 'failed', updated_at = ? WHERE analysis_id = ?`,\r\n      [new Date().toISOString(), analysisId]\r\n    );\r\n  }\r\n}", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/mnt/c/Users/willi/Qwen3Online/backend/.wrangler/tmp/bundle-NJQ9e5/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/mnt/c/Users/willi/Qwen3Online/backend/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/mnt/c/Users/willi/Qwen3Online/backend/.wrangler/tmp/bundle-NJQ9e5/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/mnt/c/Users/willi/Qwen3Online/backend/.wrangler/tmp/bundle-NJQ9e5/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/mnt/c/Users/willi/Qwen3Online/backend/src/index.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/mnt/c/Users/willi/Qwen3Online/backend/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/mnt/c/Users/willi/Qwen3Online/backend/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/mnt/c/Users/willi/Qwen3Online/backend/src/index.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "import { handleHealth } from \"./handlers/health\";\r\nimport { handleAnalysisByHash } from \"./handlers/analysis/byHash\";\r\nimport { handleAnalysisAnalyze } from \"./handlers/analysis/analyze\";\r\nimport { handleAnalysisByProductId } from \"./handlers/analysis/byProductId\";\r\nimport { handleSearch } from \"./handlers/search\";\r\nimport { handleHistory } from \"./handlers/history\";\r\nimport { withRateLimit } from \"./lib/rateLimit\";\r\nimport { json, error } from \"./lib/responses\";\r\n\r\nexport interface Env {\r\n  LABELSLAYER_D1: D1Database;\r\n  R2_BUCKET: R2Bucket;\r\n  VECT_INDEX?: VectorizeIndex;\r\n  ANALYSIS_QUEUE: Queue;\r\n  // Vars\r\n  API_VERSION: string;\r\n  SCHEMA_VERSION: string;\r\n  ANALYSIS_QUEUE_NAME: string;\r\n  SIGNED_URL_TTL_SECONDS: number;\r\n  RATE_LIMIT_MAX_MINUTE: number;\r\n  LOG_SAMPLE_RATE?: number;\r\n  MCP_CONTEXT7_ENDPOINT?: string;\r\n  MCP_SEQUENTIAL_ENDPOINT?: string;\r\n  OPENAI_BASE_URL?: string;\r\n  VECTORIZE_DIMENSION?: number;\r\n  CORS_ALLOW_ORIGIN?: string;\r\n  // Secrets (set via wrangler secret)\r\n  OPENAI_API_KEY?: string;\r\n  ETAG_SALT?: string;\r\n}\r\n\r\nfunction addCorsHeaders(resp: Response, env: Env): Response {\r\n  const headers = new Headers(resp.headers);\r\n  const allowOrigin = env.CORS_ALLOW_ORIGIN || \"*\";\r\n  headers.set(\"Access-Control-Allow-Origin\", allowOrigin);\r\n  headers.set(\"Access-Control-Allow-Methods\", \"GET,POST,OPTIONS\");\r\n  headers.set(\"Access-Control-Allow-Headers\", \"Content-Type,If-None-Match,Idempotency-Key\");\r\n  headers.set(\"Access-Control-Expose-Headers\", \"ETag,RateLimit-Limit,RateLimit-Remaining,RateLimit-Reset,X-Schema-Version\");\r\n  // Add schema version for visibility on 200/202 responses\r\n  if (!headers.has(\"X-Schema-Version\") && env.SCHEMA_VERSION) {\r\n    headers.set(\"X-Schema-Version\", env.SCHEMA_VERSION);\r\n  }\r\n  return new Response(resp.body, { status: resp.status, headers });\r\n}\r\n\r\nfunction okJson(data: unknown, env: Env, init?: ResponseInit): Response {\r\n  return addCorsHeaders(json(data, init), env);\r\n}\r\n\r\nfunction errJson(code: string, message: string, status = 400, env?: Env, details?: Record<string, unknown>): Response {\r\n  const resp = error(code, message, status, details);\r\n  return env ? addCorsHeaders(resp, env) : resp;\r\n}\r\n\r\nexport default {\r\n  async fetch(request: Request, env: Env, ctx: ExecutionContext): Promise<Response> {\r\n    // CORS preflight\r\n    if (request.method === \"OPTIONS\") {\r\n      return addCorsHeaders(new Response(null, { status: 204 }), env);\r\n    }\r\n\r\n    const url = new URL(request.url);\r\n    const path = url.pathname;\r\n    const method = request.method.toUpperCase();\r\n\r\n    // Apply rate limiting per route\r\n    const rateLimited = async (handler: () => Promise<Response>) => {\r\n      return withRateLimit(request, env, async (rateHeaders: { [k: string]: number }) => {\r\n        const res = await handler();\r\n        const headers = new Headers(res.headers);\r\n        for (const [k, v] of Object.entries(rateHeaders)) {\r\n          headers.set(k, String(v));\r\n        }\r\n        // Ensure schema version visibility on responses that didn't set it\r\n        if (!headers.has(\"X-Schema-Version\") && env.SCHEMA_VERSION) {\r\n          headers.set(\"X-Schema-Version\", env.SCHEMA_VERSION);\r\n        }\r\n        return new Response(res.body, { status: res.status, headers });\r\n      });\r\n    };\r\n\r\n    try {\r\n      // Routing\r\n      if (method === \"GET\" && path === \"/health\") {\r\n        return rateLimited(async () => addCorsHeaders(await handleHealth(request, env), env));\r\n      }\r\n\r\n      if (path === \"/analysis/by-hash\" && method === \"POST\") {\r\n        return rateLimited(async () => addCorsHeaders(await handleAnalysisByHash(request, env, ctx), env));\r\n      }\r\n\r\n      if (path === \"/analysis/analyze\" && method === \"POST\") {\r\n        return rateLimited(async () => addCorsHeaders(await handleAnalysisAnalyze(request, env, ctx), env));\r\n      }\r\n\r\n      if (path === \"/analysis/by-product-id\" && method === \"GET\") {\r\n        return rateLimited(async () => addCorsHeaders(await handleAnalysisByProductId(request, env), env));\r\n      }\r\n\r\n      if (path === \"/search\" && method === \"GET\") {\r\n        return rateLimited(async () => addCorsHeaders(await handleSearch(request, env), env));\r\n      }\r\n\r\n      if (path === \"/history\" && method === \"POST\") {\r\n        return rateLimited(async () => addCorsHeaders(await handleHistory(request, env), env));\r\n      }\r\n\r\n      return addCorsHeaders(\r\n        errJson(\"NOT_FOUND\", `Route ${method} ${path} not found`, 404, env),\r\n        env\r\n      );\r\n    } catch (e: any) {\r\n      const msg = (e && e.message) ? e.message : \"Unexpected error\";\r\n      const resp = errJson(\"INTERNAL_ERROR\", msg, 500, env);\r\n      return addCorsHeaders(resp, env);\r\n    }\r\n  },\r\n\r\n  // Queue consumer (analysis jobs)\r\n  async queue(batch: MessageBatch<any>, env: Env, ctx: ExecutionContext): Promise<void> {\r\n    // Lazy import to avoid cold-start cost on fetch-only\r\n    const { processAnalysisJob } = await import(\"./jobs/analysisWorker\");\r\n    for (const msg of batch.messages) {\r\n      try {\r\n        await processAnalysisJob(msg, env, ctx);\r\n        msg.ack();\r\n      } catch (err) {\r\n        // Rely on queue retry policy from wrangler.toml\r\n        msg.retry();\r\n      }\r\n    }\r\n  },\r\n};", "import { json } from \"../lib/responses\";\r\nimport type { Env } from \"../index\";\r\n\r\nexport async function handleHealth(_req: Request, env: Env): Promise<Response> {\r\n  const body = {\r\n    ok: true,\r\n    service: \"labelslayer-backend\",\r\n    version: env.API_VERSION || \"0.0.0\",\r\n    schemaVersion: env.SCHEMA_VERSION || \"0000\",\r\n    time: new Date().toISOString(),\r\n  };\r\n  return json(body, { status: 200 });\r\n}", "export function withCorsHeaders(init?: ResponseInit, allowOrigin: string = \"*\"): Headers {\r\n  const headers = new Headers(init?.headers || {});\r\n  headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\r\n  headers.set(\"Access-Control-Allow-Origin\", allowOrigin);\r\n  headers.set(\"Access-Control-Allow-Methods\", \"GET,POST,OPTIONS\");\r\n  headers.set(\"Access-Control-Allow-Headers\", \"Content-Type,If-None-Match\");\r\n  headers.set(\"Access-Control-Expose-Headers\", \"ETag,RateLimit-Limit,RateLimit-Remaining,RateLimit-Reset\");\r\n  return headers;\r\n}\r\n\r\nexport function json(data: unknown, init?: ResponseInit): Response {\r\n  const body = JSON.stringify(data);\r\n  const headers = new Headers(init?.headers || {});\r\n  if (!headers.has(\"Content-Type\")) {\r\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\r\n  }\r\n  return new Response(body, { status: init?.status ?? 200, headers });\r\n}\r\n\r\nexport function error(code: string, message: string, status = 400, details?: Record<string, unknown>): Response {\r\n  return json(\r\n    {\r\n      error: {\r\n        code,\r\n        message,\r\n        details: details || {},\r\n      },\r\n    },\r\n    { status }\r\n  );\r\n}\r\n\r\nexport function notModified(etag: string): Response {\r\n  const headers = new Headers();\r\n  headers.set(\"ETag\", etag);\r\n  return new Response(null, { status: 304, headers });\r\n}", "import type { Env } from \"../../index\";\r\nimport { getDb, query, run } from \"../../lib/db\";\r\nimport { error, json, notModified } from \"../../lib/responses\";\r\nimport { makeEtag } from \"../../lib/etag\";\r\nimport { getSignedUrl } from \"../../lib/r2\";\r\nimport type { AnalysisByHashRequest, AnalysisByHashResponse, AnalysisRecordDTO, ProductDTO, ProductAnalysisData } from \"../../types/api\";\r\n\r\nconst PHASH_RE_STRICT = /^[a-f0-9]{16}$/; // exactly 64-bit hex, lowercase enforced below\r\nconst IDEM_TTL_SECONDS = 15 * 60;\r\n\r\nasync function getIdemKey(db: D1Database, key: string) {\r\n  const rows = await query<any>(db, `SELECT key, response_status, response_body, last_seen_at FROM idempotency_keys WHERE key = ? LIMIT 1`, [key]);\r\n  return rows[0] || null;\r\n}\r\nasync function upsertIdemKey(db: D1Database, key: string, method: string, route: string, status?: number, body?: any) {\r\n  const now = new Date().toISOString();\r\n  const bodyStr = typeof body === \"string\" ? body : JSON.stringify(body ?? null);\r\n  await run(db, `INSERT INTO idempotency_keys (key, method, route, first_seen_at, last_seen_at, response_status, response_body)\r\n                 VALUES (?, ?, ?, ?, ?, ?, ?)\r\n                 ON CONFLICT(key) DO UPDATE SET last_seen_at=excluded.last_seen_at, response_status=COALESCE(excluded.response_status, idempotency_keys.response_status), response_body=COALESCE(excluded.response_body, idempotency_keys.response_body)`,\r\n    [key, method, route, now, now, status ?? null, bodyStr ?? null]);\r\n}\r\n\r\nexport async function handleAnalysisByHash(req: Request, env: Env, ctx: ExecutionContext): Promise<Response> {\r\n  let body: AnalysisByHashRequest;\r\n  try {\r\n    body = await req.json();\r\n  } catch {\r\n    return error(\"BAD_JSON\", \"Invalid JSON body\", 400);\r\n  }\r\n  const raw = String(body?.pHash || \"\");\r\n  const pHash = raw.toLowerCase();\r\n  if (!PHASH_RE_STRICT.test(pHash)) {\r\n    return error(\"INVALID_PHASH\", \"pHash must be exactly 16 lowercase hex chars\", 400);\r\n  }\r\n\r\n  const db = getDb(env);\r\n\r\n  // Cache-first: attempt to serve existing record with ETag/304\r\n  const rows = await query<any>(\r\n    db,\r\n    `SELECT analysis_id, product_id, phash, status, summary, etag, image_key, product_name, product_brand, product_upc, updated_at, analysis_data_json\r\n     FROM v_latest_analysis_by_phash WHERE phash = ? LIMIT 1`,\r\n    [pHash]\r\n  );\r\n\r\n  if (rows.length) {\r\n    const r = rows[0];\r\n    \r\n    // Parse structured analysis data if available\r\n    let analysisData: ProductAnalysisData | undefined;\r\n    if (r.analysis_data_json) {\r\n      try {\r\n        analysisData = JSON.parse(r.analysis_data_json);\r\n      } catch (parseError) {\r\n        console.warn('Failed to parse analysis_data_json:', parseError);\r\n        analysisData = undefined;\r\n      }\r\n    }\r\n\r\n    const record: AnalysisRecordDTO = {\r\n      analysisId: String(r.analysis_id),\r\n      productId: r.product_id ? String(r.product_id) : null,\r\n      pHash: String(r.phash),\r\n      status: String(r.status) as any,\r\n      summary: r.summary ?? null,\r\n      etag: r.etag ?? null,\r\n      createdAt: new Date().toISOString(),\r\n      updatedAt: r.updated_at ? String(r.updated_at) : new Date().toISOString(),\r\n    };\r\n    const etag = r.etag || (await makeEtag(record, env.ETAG_SALT));\r\n    const ifNone = req.headers.get(\"If-None-Match\");\r\n    if (ifNone && ifNone === etag) {\r\n      return notModified(etag);\r\n    }\r\n\r\n    let signedImageUrl: string | undefined;\r\n    if (r.image_key) {\r\n      signedImageUrl = await getSignedUrl(env, String(r.image_key), Number(env.SIGNED_URL_TTL_SECONDS ?? 900));\r\n    }\r\n\r\n    const product: ProductDTO | null = r.product_id\r\n      ? {\r\n          id: String(r.product_id),\r\n          name: analysisData?.name || String(r.product_name ?? \"Unknown\"),\r\n          brand: r.product_brand ?? null,\r\n          upc: r.product_upc ?? null,\r\n          imageKey: r.image_key ?? null,\r\n        }\r\n      : null;\r\n\r\n    const resp: AnalysisByHashResponse = {\r\n      hit: true,\r\n      record: { \r\n        ...record, \r\n        etag,\r\n        analysisData // Add structured data to response\r\n      },\r\n      product: product ? {\r\n        ...product,\r\n        name: analysisData?.name || product.name || \"Unknown Product\"\r\n      } : null,\r\n      signedImageUrl: signedImageUrl ?? null,\r\n    };\r\n    const res = json(resp, { status: 200 });\r\n    res.headers.set(\"ETag\", etag);\r\n    res.headers.set(\"X-Schema-Version\", env.SCHEMA_VERSION);\r\n    return res;\r\n  }\r\n\r\n  // Miss: honor Idempotency-Key to avoid duplicate enqueues within short window\r\n  const idem = req.headers.get(\"Idempotency-Key\") || undefined;\r\n  if (idem) {\r\n    const existing = await getIdemKey(db, idem);\r\n    if (existing) {\r\n      const ageSec = Math.floor((Date.now() - Date.parse(existing.last_seen_at)) / 1000);\r\n      if (ageSec < IDEM_TTL_SECONDS && existing.response_status) {\r\n        // Replay previous response\r\n        const replayBody = existing.response_body ? JSON.parse(existing.response_body) : {};\r\n        const res = json(replayBody, { status: Number(existing.response_status) });\r\n        res.headers.set(\"X-Idempotent-Replay\", \"1\");\r\n        res.headers.set(\"X-Schema-Version\", env.SCHEMA_VERSION);\r\n        return res;\r\n      }\r\n    }\r\n  }\r\n\r\n  // Ensure image signature exists\r\n  const analysisId = crypto.randomUUID();\r\n  const nowIso = new Date().toISOString();\r\n\r\n  await run(\r\n    db,\r\n    `INSERT OR IGNORE INTO image_signatures (phash, first_seen_at) VALUES (?, ?);`,\r\n    [pHash, nowIso]\r\n  );\r\n\r\n  await run(\r\n    db,\r\n    `INSERT OR IGNORE INTO analysis_records (analysis_id, phash, status, summary, etag, created_at, updated_at)\r\n     VALUES (?, ?, 'queued', NULL, NULL, ?, ?)`,\r\n    [analysisId, pHash, nowIso, nowIso]\r\n  );\r\n\r\n  const job = { analysisId, pHash, r2Key: null as string | null };\r\n  await env.ANALYSIS_QUEUE.send(job);\r\n\r\n  const resp: AnalysisByHashResponse = {\r\n    hit: false,\r\n    jobId: analysisId,\r\n    retryAfterSeconds: 3,\r\n  };\r\n  const res = json(resp, { status: 202 });\r\n  res.headers.set(\"X-Schema-Version\", env.SCHEMA_VERSION);\r\n\r\n  if (idem) {\r\n    await upsertIdemKey(db, idem, \"POST\", \"/analysis/by-hash\", 202, resp);\r\n  }\r\n  return res;\r\n}", "import type { Env } from \"../index\";\r\n\r\nexport async function getSignedUrl(env: Env, key: string, ttlSeconds?: number): Promise<string> {\r\n  const expires = Math.floor(Date.now() / 1000) + (ttlSeconds ?? Number(env.SIGNED_URL_TTL_SECONDS ?? 900));\r\n  if (typeof env.R2_BUCKET.createSignedUrl === \"function\") {\r\n    const signed = await env.R2_BUCKET.createSignedUrl!(key, { method: \"GET\", expires });\r\n    return signed.url;\r\n  }\r\n  // Dev fallback (not actually signed)\r\n  const url = new URL(`https://r2.example/${encodeURIComponent(key)}`);\r\n  url.searchParams.set(\"exp\", String(expires));\r\n  return url.toString();\r\n}", "import type { Env } from \"../../index\";\r\nimport { getDb, run } from \"../../lib/db\";\r\nimport { error, json } from \"../../lib/responses\";\r\nimport type { AnalysisAnalyzeRequest, AnalysisAnalyzeResponse } from \"../../types/api\";\r\n\r\nconst PHASH_RE_STRICT = /^[a-f0-9]{16}$/;\r\n\r\nexport async function handleAnalysisAnalyze(req: Request, env: Env, _ctx: ExecutionContext): Promise<Response> {\r\n  let body: AnalysisAnalyzeRequest;\r\n  try {\r\n    body = await req.json();\r\n  } catch {\r\n    return error(\"BAD_JSON\", \"Invalid JSON body\", 400);\r\n  }\r\n\r\n  if (!body.imageUrl && !body.imageBase64) {\r\n    return error(\"INVALID_INPUT\", \"Provide imageUrl or imageBase64\", 400);\r\n  }\r\n  if (body.pHash) {\r\n    const ph = String(body.pHash).toLowerCase();\r\n    if (!PHASH_RE_STRICT.test(ph)) {\r\n      return error(\"INVALID_PHASH\", \"pHash must be exactly 16 lowercase hex chars\", 400);\r\n    }\r\n    body.pHash = ph;\r\n  }\r\n\r\n  const db = getDb(env);\r\n\r\n  // Idempotency key (soft) \u2014 dedupe enqueue window via analysis_records and image_signatures\r\n  const analysisId = crypto.randomUUID();\r\n  const nowIso = new Date().toISOString();\r\n  const pHash = (body.pHash || \"unknown\").toLowerCase();\r\n\r\n  await run(\r\n    db,\r\n    `INSERT OR IGNORE INTO image_signatures (phash, first_seen_at) VALUES (?, ?);`,\r\n    [pHash, nowIso]\r\n  );\r\n\r\n  await run(\r\n    db,\r\n    `INSERT OR IGNORE INTO analysis_records (analysis_id, phash, status, summary, etag, created_at, updated_at)\r\n     VALUES (?, ?, 'queued', NULL, NULL, ?, ?)`,\r\n    [analysisId, pHash, nowIso, nowIso]\r\n  );\r\n\r\n  // Enqueue job (worker is idempotent on analysis_id)\r\n  const job = {\r\n    analysisId,\r\n    pHash,\r\n    image: body.imageUrl ? { url: body.imageUrl } : { base64Size: body.imageBase64?.length ?? 0 },\r\n  };\r\n  await env.ANALYSIS_QUEUE.send(job);\r\n\r\n  const resp: AnalysisAnalyzeResponse = {\r\n    analysisId,\r\n    status: \"queued\",\r\n    jobId: analysisId,\r\n    retryAfterSeconds: 3,\r\n  };\r\n  const res = json(resp, { status: 202 });\r\n  res.headers.set(\"X-Schema-Version\", env.SCHEMA_VERSION);\r\n  return res;\r\n}", "import type { Env } from \"../../index\";\r\nimport { getDb, query } from \"../../lib/db\";\r\nimport { error, json, notModified } from \"../../lib/responses\";\r\nimport { makeEtag } from \"../../lib/etag\";\r\nimport type { AnalysisByProductIdResponse, AnalysisRecordDTO, ProductAnalysisData } from \"../../types/api\";\r\n\r\nexport async function handleAnalysisByProductId(req: Request, env: Env): Promise<Response> {\r\n  const url = new URL(req.url);\r\n  const productId = url.searchParams.get(\"productId\");\r\n  if (!productId) {\r\n    return error(\"INVALID_INPUT\", \"productId is required\", 400);\r\n  }\r\n\r\n  const db = getDb(env);\r\n  const rows = await query<any>(\r\n    db,\r\n    `SELECT analysis_id, product_id, phash, status, summary, etag, updated_at, analysis_data_json\r\n     FROM analysis_records\r\n     WHERE product_id = ?\r\n     ORDER BY updated_at DESC\r\n     LIMIT 1`,\r\n    [productId]\r\n  );\r\n\r\n  if (!rows.length) {\r\n    return error(\"NOT_FOUND\", \"No analysis found for productId\", 404);\r\n  }\r\n\r\n  const r = rows[0];\r\n  \r\n  // Parse structured analysis data if available\r\n  let analysisData: ProductAnalysisData | undefined;\r\n  if (r.analysis_data_json) {\r\n    try {\r\n      analysisData = JSON.parse(r.analysis_data_json);\r\n    } catch (parseError) {\r\n      console.warn('Failed to parse analysis_data_json:', parseError);\r\n      analysisData = undefined;\r\n    }\r\n  }\r\n\r\n  const record: AnalysisRecordDTO = {\r\n    analysisId: String(r.analysis_id),\r\n    productId: r.product_id ? String(r.product_id) : null,\r\n    pHash: String(r.phash),\r\n    status: String(r.status) as any,\r\n    summary: r.summary ?? null,\r\n    etag: r.etag ?? null,\r\n    createdAt: new Date().toISOString(),\r\n    updatedAt: r.updated_at ? String(r.updated_at) : new Date().toISOString(),\r\n  };\r\n  const etag = r.etag || (await makeEtag(record, env.ETAG_SALT));\r\n  const ifNone = req.headers.get(\"If-None-Match\");\r\n  if (ifNone && ifNone === etag) {\r\n    return notModified(etag);\r\n  }\r\n\r\n  const resp: AnalysisByProductIdResponse = { \r\n    hit: true, \r\n    record: { \r\n      ...record, \r\n      analysisData \r\n    }, \r\n    etag \r\n  };\r\n  const res = json(resp, { status: 200 });\r\n  res.headers.set(\"ETag\", etag);\r\n  res.headers.set(\"X-Schema-Version\", env.SCHEMA_VERSION);\r\n  return res;\r\n}", "import type { Env } from \"../index\";\r\nimport { getDb, query } from \"../lib/db\";\r\nimport { json } from \"../lib/responses\";\r\nimport type { SearchResponse } from \"../types/api\";\r\n\r\nexport async function handleSearch(req: Request, env: Env): Promise<Response> {\r\n  const url = new URL(req.url);\r\n  const q = (url.searchParams.get(\"q\") || \"\").trim();\r\n  const limit = Math.min(Number(url.searchParams.get(\"limit\") || 10), 50);\r\n\r\n  if (!q) {\r\n    return json({ results: [] } as SearchResponse, { status: 200 });\r\n  }\r\n\r\n  const like = `%${q.replace(/%/g, \"\").replace(/_/g, \"\")}%`;\r\n  const rows = await query<any>(\r\n    getDb(env),\r\n    `SELECT id, name, brand, upc, image_key\r\n     FROM products\r\n     WHERE name LIKE ? OR brand LIKE ? OR upc LIKE ?\r\n     LIMIT ?`,\r\n    [like, like, like, limit]\r\n  );\r\n\r\n  const results: SearchResponse[\"results\"] = rows.map((r: any) => ({\r\n    product: {\r\n      id: String(r.id),\r\n      name: String(r.name),\r\n      brand: r.brand ?? null,\r\n      upc: r.upc ?? null,\r\n      imageKey: r.image_key ?? null,\r\n    },\r\n    score: 0.5, // simple placeholder score for LIKE-based search\r\n  }));\r\n\r\n  return json({ results } satisfies SearchResponse, { status: 200 });\r\n}", "import type { Env } from \"../index\";\r\nimport { getDb, run } from \"../lib/db\";\r\nimport { error, json } from \"../lib/responses\";\r\nimport type { HistoryRequest, HistoryResponse } from \"../types/api\";\r\n\r\nexport async function handleHistory(req: Request, env: Env): Promise<Response> {\r\n  let body: HistoryRequest;\r\n  try {\r\n    body = await req.json();\r\n  } catch {\r\n    return error(\"BAD_JSON\", \"Invalid JSON body\", 400);\r\n  }\r\n  const events = Array.isArray(body?.events) ? body.events : [];\r\n  if (!events.length) {\r\n    return json({ accepted: 0 } as HistoryResponse, { status: 202 });\r\n  }\r\n\r\n  const db = getDb(env);\r\n  const nowIso = new Date().toISOString();\r\n  let accepted = 0;\r\n  for (const ev of events) {\r\n    try {\r\n      await run(\r\n        db,\r\n        `INSERT INTO user_history (user_id, type, product_id, analysis_id, metadata_json, occurred_at, created_at)\r\n         VALUES (?, ?, ?, ?, ?, ?, ?)`,\r\n        [\r\n          ev.userId ?? null,\r\n          String(ev.type || \"unknown\"),\r\n          ev.productId ?? null,\r\n          ev.analysisId ?? null,\r\n          JSON.stringify(ev.metadata ?? {}),\r\n          ev.occurredAt ?? nowIso,\r\n          nowIso,\r\n        ]\r\n      );\r\n      accepted += 1;\r\n    } catch {\r\n      // swallow individual errors to keep ingestion resilient\r\n    }\r\n  }\r\n\r\n  return json({ accepted } as HistoryResponse, { status: 202 });\r\n}", "type RateHeaders = {\r\n  \"RateLimit-Limit\": number;\r\n  \"RateLimit-Remaining\": number;\r\n  \"RateLimit-Reset\": number;\r\n};\r\n\r\nconst memoryBuckets = new Map<string, { count: number; resetAt: number }>();\r\n\r\nfunction getClientKey(req: Request): string {\r\n  // Trust cf-connecting-ip when present, fallback to remote addr (not available in Workers), else UA hash\r\n  const ip = req.headers.get(\"cf-connecting-ip\") || \"0.0.0.0\";\r\n  const ua = req.headers.get(\"user-agent\") || \"unknown\";\r\n  return `${ip}:${ua.slice(0, 32)}`;\r\n}\r\n\r\nexport async function withRateLimit(\r\n  req: Request,\r\n  env: { RATE_LIMIT_MAX_MINUTE?: number },\r\n  next: (headers: RateHeaders) => Promise<Response>\r\n): Promise<Response> {\r\n  const limit = Number(env.RATE_LIMIT_MAX_MINUTE ?? 120);\r\n  const key = getClientKey(req);\r\n  const now = Date.now();\r\n  const minute = 60 * 1000;\r\n\r\n  let bucket = memoryBuckets.get(key);\r\n  if (!bucket || now > bucket.resetAt) {\r\n    bucket = { count: 0, resetAt: now + minute };\r\n    memoryBuckets.set(key, bucket);\r\n  }\r\n\r\n  if (bucket.count >= limit) {\r\n    const headers: RateHeaders = {\r\n      \"RateLimit-Limit\": limit,\r\n      \"RateLimit-Remaining\": Math.max(0, limit - bucket.count),\r\n      \"RateLimit-Reset\": Math.ceil((bucket.resetAt - now) / 1000),\r\n    };\r\n    return new Response(\r\n      JSON.stringify({\r\n        error: {\r\n          code: \"RATE_LIMITED\",\r\n          message: \"Too Many Requests\",\r\n          details: {},\r\n        },\r\n      }),\r\n      {\r\n        status: 429,\r\n        headers: {\r\n          \"Content-Type\": \"application/json; charset=utf-8\",\r\n          \"RateLimit-Limit\": String(headers[\"RateLimit-Limit\"]),\r\n          \"RateLimit-Remaining\": String(headers[\"RateLimit-Remaining\"]),\r\n          \"RateLimit-Reset\": String(headers[\"RateLimit-Reset\"]),\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  bucket.count += 1;\r\n  const headers: RateHeaders = {\r\n    \"RateLimit-Limit\": limit,\r\n    \"RateLimit-Remaining\": Math.max(0, limit - bucket.count),\r\n    \"RateLimit-Reset\": Math.ceil((bucket.resetAt - now) / 1000),\r\n  };\r\n  return next(headers);\r\n}\r\n\r\n// TODO: Production-grade rate limiting via Durable Object or KV; keep in-memory for dev only.", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n"],
  "mappings": "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,sBACA,QACA,OACA,QACA,OACA,kBACA,kBACA,OACA,QACA,SACA,UACA,QACA,YACA,gBACA,YACA,WACAC,SACA,SACA,MACA,UACA,SACA,SACA,SACA,QACA,WACA,QACA,SACA,SACA,QACA,WACA,QACA,YACA,YACA,SACA,cACA,UACA,eACA,WACA,eACA,iBACA,mBACA,oBACA,OACA,kBACA,WACA,4BACA,2BACA,eACA,aACA,cACA,iBACA,UACA,OACA,gBAEI,UA8GC;AAnOP,IAAAC,gBAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AAAA;AACA;AACA,IAAM,gBAAgB,WAAW,SAAS;AACnC,IAAM,mBAAmB,cAAc;AACvC,KAAM,EAAE,MAAM,UAAU,aAAa;AAAA,MAC1C;AAAA,IACF;AACA,IAAM,eAAe,IAAI,QAAa;AAAA,MACpC,KAAK,cAAc;AAAA,MACnB;AAAA,MACA;AAAA,IACF,CAAC;AACM,KAAM;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,QAAAH;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;A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",
  "names": ["init_performance", "init_performance", "PerformanceMark", "init_performance", "init_performance", "init_performance", "init_performance", "clear", "count", "countReset", "createTask", "debug", "dir", "dirxml", "error", "group", "groupCollapsed", "groupEnd", "info", "log", "profile", "profileEnd", "table", "time", "timeEnd", "timeLog", "timeStamp", "trace", "warn", "init_console", "init_performance", "init_console", "init_performance", "hrtime", "init_performance", "dir", "env", "count", "init_performance", "init_performance", "init_performance", "init_performance", "cwd", "hrtime", "assert", "init_process", "init_performance", "init_process", "init_performance", "env", "init_performance", "init_performance", "env", "json", "init_performance", "error", "init_performance", "env", "error", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "init_performance", "error", "env", "init_performance", "init_performance", "env", "env", "error", "resp", "res", "init_performance", "PHASH_RE_STRICT", "env", "error", "init_performance", "env", "error", "init_performance", "env", "init_performance", "env", "error", "init_performance", "env", "headers", "env", "env", "error", "processAnalysisJob", "init_performance", "env", "init_performance", "env", "error", "init_performance", "env", "env"]
}
